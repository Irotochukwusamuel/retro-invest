// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Wallet
  nairaWallet   NairaWallet?
  cryptoWallet  CryptoWallet?

  // Investments
  investments   Investment[]
  transactions  Transaction[]
  withdrawals   Withdrawal[]
}

model NairaWallet {
  id        String   @id @default(cuid())
  userId    String   @unique
  balance   Float    @default(0)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CryptoWallet {
  id        String   @id @default(cuid())
  userId    String   @unique
  btcBalance Float   @default(0)
  ethBalance Float   @default(0)
  usdtBalance Float  @default(0)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Investment {
  id            String   @id @default(cuid())
  userId        String
  type          InvestmentType
  amount        Float
  roi           Float
  duration      Int?     // in days, null for flexible
  status        InvestmentStatus @default(ACTIVE)
  autoReinvest  Boolean  @default(false)
  startDate     DateTime @default(now())
  endDate       DateTime?
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Transaction {
  id        String   @id @default(cuid())
  userId    String
  type      TransactionType
  amount    Float
  status    TransactionStatus @default(PENDING)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Withdrawal {
  id        String   @id @default(cuid())
  userId    String
  type      WithdrawalType
  amount    Float
  status    WithdrawalStatus @default(PENDING)
  address   String?  // For crypto withdrawals
  bankDetails Json?  // For naira withdrawals
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum InvestmentType {
  NAIRA
  BTC
  ETH
  USDT
}

enum InvestmentStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

enum TransactionType {
  DEPOSIT
  ROI
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum WithdrawalType {
  NAIRA
  BTC
  ETH
  USDT
}

enum WithdrawalStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
} 